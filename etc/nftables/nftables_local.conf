#!/usr/sbin/nft -f

flush ruleset

include "/etc/nftables/nftables_fail2ban.conf"

# List all IPs and IP ranges for permissible traffic
# # Twilio Gateway IPs
# # - NB these are both for SIP(S) and RTP
# # - see link https://www.twilio.com/docs/sip-trunking#ip-addresses
# # - SIP(S) seem to be low /30 in each block, at least for N.A.
define GW_NA_VA = { 54.172.60.0/23, 34.203.250.0/23 } 		# North America, Virginia
define GW_NA_OR = { 54.244.51.0/24 } 				# North America, Oregon
define GW_EU_IE = { 54.171.127.192/26, 52.215.127.0/24 } 	# Europe, Ireland
define GW_EU_DE = { 35.156.191.128/25, 3.122.181.0/24 } 	# Europe, Germany (Frankfurt)
define GW_AP_JP = { 54.65.63.192/26, 3.112.80.0/24 } 		# Asia Pacific, Japan (Tokyo)
define GW_AP_SG = { 54.169.127.128/26, 3.1.77.0/24 } 		# Asia Pacific, Singapore
define GW_AP_AU = { 54.252.254.64/26, 3.104.90.0/24 } 		# Asia Pacific, Australia (Sydney)
define GW_SA_BR = { 177.71.206.192/26, 18.228.249.0/24 } 	# South America, Brazil (Sao Paulo)

define TWILIO_IPS = { $GW_NA_VA, $GW_NA_OR, $GW_EU_IE, $GW_EU_DE, $GW_AP_JP, $GW_AP_SG, $GW_AP_AU, $GW_SA_BR }

define ADMIN_IPS = { 127.0.0.1 } #add any other allowed administration IPs here

table inet firewall {
	chain inbound {
		#By default, drop all traffic unless it meets a filter
		#criteria specified by the rules that follow below.
		type filter hook input priority 0; policy drop;

		# Allow traffic from established and related packets.
		ct state { established, related } accept

		# Drop invalid
		ct state invalid drop

		# Allow loopback traffic
		iifname lo accept

		#Allow all ICMP and IGMP traffic, but enforce a rate limit
		#to help prevent some types of flood attacks
		ip protocol icmp limit rate 4/second accept
		ip6 nexthdr ipv6-icmp limit rate 4/second accept
		ip protocol igmp limit rate 4/second accept

		#Allow necessary services (HTTP(S), SSH) for approved administration IPs
		tcp dport 22 ip saddr $ADMIN_IPS accept
		tcp dport { http, https } ip saddr $ADMIN_IPS accept
		udp dport { http, https } ip saddr $ADMIN_IPS accept
		
		#Allow incoming traffic on other ports
		#-- Allow VoIP SIP(S) traffic
		tcp dport { 5060, 5061 } ip saddr != { $ADMIN_IPS, $TWILIO_IPS } drop
		udp dport { 5060, 5061 } ip saddr != { $ADMIN_IPS, $TWILIO_IPS } drop

		#-- Allow VoIP RTP traffic
		udp dport 10000-20000 ip saddr { $ADMIN_IPS, $TWILIO_IPS } accept
		
		#Uncomment to enable logging of denied traffic
		log prefix "[nftables] DENIED INBOUND: " flags all counter drop
		#log prefix "[nftables] ACCEPTED INBOUND: " flags all counter accept
	}

	chain forward {
		# Drop everything (this device is not a router!)
		type filter hook forward priority 0; policy drop;
		# Uncomment to enable loggin of denied forwards
		# log prefix "[nftables] DENIED FORWARD: " flags all counter drop
	}

	chain outbound {
		# Allow all outbound traffic
		type filter hook output priority 0; policy accept;
	}
}

